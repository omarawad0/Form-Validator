@import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');
/*:root represents the <html> element and is identical to the selector html,
except that its specificity is higher. :root can be useful for declaring global CSS variables.*/
:root {
    /*CSS custom properties (variables)*/
    /*Custom properties allow a value to be stored in one place, then referenced in multiple other places.
    An additional benefit is semantic identifiers. For example, --sucess-color is easier to understand than #2ecc71,
    especially if this same color is also used in other contexts.*/
    --sucess-color: #2ecc71;
    --error-color: #e74c3c;
}

* {
    /* i don't want any padding to affect the width of any element*/
    box-sizing: border-box;
}

body {
    background-color: #f9fafb;
    font-family: 'Open-Sans', sans-serif;
    /*so we can easily but all the stuff (child elements) in the middle both vertically and horizontally*/
    /*note: the following is a common snippet*/
    display: flex;
    /*horizontely*/
    justify-content: center;
    /*vertically*/
    min-height: 100vh;
    align-items: center;
    margin: 0;
}

.container {
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 2px 10px /*blur*/ rgba(0, 0, 0, 0.3); /*the alpha for transparancy*/
    width: 400px;
}

h2 {
    text-align: center;
    margin: 0 0 20px;
}
.form {
    padding: 30px 40px;
}

.form-control {
    margin-bottom: 10px;
    padding-bottom: 20px;
    position: relative;
}

.form-control label {
    color: #777;
    /*it displays inline by default so i want them to go on their own line
    and they knocked the next element down.*/
    display: block;
    margin-bottom: 5px;
}

.form-control input {
    border: 2px solid #f0f0f0;
    border-radius: 4px;
    padding: 10px;
    display: block;
    width: 100%;
    font-size: 14px;
}

.form-control input:focus {
    outline: 0;
    border-color: #777;
}

/*if the .form-control has a class of success do so
and we gonna add it with javascript*/
.form-control.success input {
    border-color: var(--sucess-color);
}

.form-control.error input {
    border-color: var(--error-color);
}

.form-control small {
    color: var(--error-color);
    position: absolute;
    bottom: 0;
    left: 0;
    /*we don't use display: none; because it will collapse anything around it
    and remove it completely*/
    visibility: hidden;
}

.form-control.error small {
    visibility: visible;
}

.form button {
    cursor: pointer;
    background-color: #3498db;
    border: 2px solid #3498db;
    border-radius: 4px;
    color: white;
    display: block;
    width: 100%;
    font-size: 16px;
    padding: 10px;
    margin-top: 20px;
}